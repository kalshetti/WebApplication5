@model WebApplication5.Models.ProductViewModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-action="Index" asp-controller="ProductDetails" method="post">
<table class="table">
    <thead>
        <tr>
            <th>
               ProductName
            </th>
            <th>
               CategoryId
            </th>
            <th>
                CategoryName
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.ProductList) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ProductName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CategoryId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CategoryName)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.ProductId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.ProductId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.ProductId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

 <ul class="pagination">
     @for(int i=1; i<=Model.pageCount; i++)
        {
            <li class="page-item">

                @if(i!= Model.currentPageIndex)
                {
                    <a class="page-link" href="javascript:PagerClick(@i);">@i</a>
                }
                else
                {
                    <a class="page-link">@i</a>
                }

            </li>
        }
    </ul>
    <input type="hidden" id="hfCurrentPageIndex" name="currentPageIndex" />
</form>

 <script type="text/javascript">
     function PagerClick(index) 
     { 
         document.getElementById("hfCurrentPageIndex").value = index;
         document.forms[0].submit();
     }

 </script>